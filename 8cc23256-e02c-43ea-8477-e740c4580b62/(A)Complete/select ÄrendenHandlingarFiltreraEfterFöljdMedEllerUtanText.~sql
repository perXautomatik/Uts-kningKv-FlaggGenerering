
--Så funktionen bör kunna:
--Utifrån en tidsperiod (alltid en månad)
--Få ut alla beslut om enskild avloppsanläggning (via händelse rubrik)
--Skilja på vilka av dessa som är nya och förbättringar (via ärendemening)
-- är det inte altid förra månaden när man gör utsökningen?
-- rubriken bör inte vara fritext
-- vi behöver väta ärendets ansökan för att beta om det är nytt eller förbättrad.
-- det är uppenbart att det inte går att förstå vilken
--Use [admsql04].EDPVisionRegionGotland;

IF OBJECT_ID('tempdb..#filterArendeWhomHasAnsokan') IS NOT NULL DROP TABLE #filterArendeWhomHasAnsokan
create table dbo.#filterArendeWhomHasAnsokan (dianr              nvarchar(max), kir                nvarchar(max), Handläggarsignatur nvarchar(max), Huvudkontakt       nvarchar(max), Sökbegrepp         nvarchar(max), ArendeText         nvarchar(max), status             nvarchar(max), Beslutsdatum       nvarchar(max), Kommentar          nvarchar(max), Löpnummer          int, dat                datetime2, Händelsekategori   nvarchar(max), rikt               nvarchar(max), rub                nvarchar(max), HandelseText       nvarchar(max), has                nvarchar(max));
--insert into #filterArendeWhomHasAnsokan

declare @handelseDatumYear integer;
declare @handelseDatumMonth integer;
declare @enhetsNamn varchar(20);
set @handelseDatumMonth = 3;
set @handelseDatumYear = 2020;
set @enhetsNamn = 'Team Vatten';

with
	  socknarOFinterest as (select '%ollingbo%' socken union
			  select  '%ejdeby%' socken union
			   select  '%okrume%' socken union
			    select  '%artebo%' socken union
			    select  N'%räkumla%' socken union
			    select  '%isby%' socken union
			    select  N'%ästerhejde%' socken
			 )
    ,     HandelserArendenInteForHa as (select * from EDPVisionRegionGotland.dbo.vwAehHaendelse
			   where strRubrik
				     in (
				         N'Reviderad ansökan ensklit avlopp',
				         N'Reviderad ansökan',
					 N'Kompletteringsbegäran skickad',
				         N'Kompletteringsbegäran',
					 'Komplettering-situationsplan',
				         'Komplettering,' +
				         'situationsplan',
					 'Komplettering',
				         N'Komplett ansökan',
					 N'Information om- Komplettering av ansökan begärd',
					 N'Beslut om enskild avloppsanläggning BDT+ WC',
					 N'Beslut om enskild avloppsanläggning BDT + Tank',
					 N'Besiktningsprotokoll – provgrop',
				         N'Avlopp - utförandeintyg',
					 N'Ansökan/anmälan om enskild avloppsanläggning',
				         N'Ansökan med underskrift'
				        )
			  )
handelserOfInterest 	 as (select h.*from EDPVisionRegionGotland.dbo.vwAehHaendelse h inner join strRubrikLike on h.strRubrik like strRubrikLike.strRubrik
			      where year(datHaendelseDatum) = @handelseDatumYear and month(datHaendelseDatum) = @handelseDatumMonth and strEnhetNamn = @enhetsNamn)
   ,utanOnödigaHandlingar as (select * from (
		    select datHaendelseDatum, strRubrik rub, strText HandelseText, strRiktning, strKommunikationssaett, recHaendelseKategoriID, recLastHaendelseStatusLogID, recHaendelseID, intRecnum, recDiarieAarsSerieID, intLoepnummer, intAntalFiler, recRemissutskickID, recFoervaltningID, strPublicering, recEnhetID, recAvdelningID, bolKaensligaPersonuppgifter, strEnhetNamn, strEnhetKod, strAvdelningNamn, strAvdelningKod, strFoervaltningKod, strHaendelseIdentifiering, strOrgannamn, strBeslutsNummer, datBeslutsDatum, recOrganID, recHaendelseBeslutID, strBeslutsutfall, recDelegationskodID, strDelegationskod, strDelegationsNamn, strHaendelseKategori, strHaendelseKategoriKod, bolEjAktuell, bolBeslut, strHaendelseKategoriKommentar, strFastighetsbeteckning, strFnrID, recFastighetID, intLoepnummerHaendelse, recAerendeID, bolMainHuvudBeslut, strSekretess, strBegraensa, strSekretessMyndighet, datSekretessDatum, recEnstakaKontaktID, strGatuadress, strPostnummer, strPostort, strVisasSom, strRoll, recKontaktRollID, recHaendelseEnstakaKontaktID, strSignature, intUserID, strHandlaeggarNamn, datDatum, strLogKommentar, strHaendelseStatusPresent, strHaendelseStatusLogTyp, strHaendelseStatusLocalizationCode,
			   strDiarienummer dianr, strAerendeTyp, recAerendetypID, strAerendeFastighet, strAerendeStatusPresent, strAerendeLocalizationCode, strSoekbegrepp, recDiarieSerieID, strDiarieserieAerende, intDiarieAar, intDiarienummerLoepNummer, intSerieStartVaerde, recDiarieSeriePostlista, strDiarieseriePostlista, intDiarieAarPostlista, strTillhoerPostlista, strAerendemening, strAerendetypKod, recKommunID, strKommunNamn, strFoervaltningNamn, intArbetsdagar, strSummaTidposter, strPoITkategori, recDelprocessID, strDelprocesskod, strDelprocess, datGallrad, datArkiverad
		 from dbo.vwAehHaendelse) z
			where not (rub in ('Mottagningskvitto', N'Uppföljning 2 år från klart vatten utskick'))
			      And left(rub,len(N'Bekräftelse')) <> (N'Bekräftelse')
			      And left(rub,len('Besiktning')) <> ('Besiktning')
			      And left(rub,len('Klart Vatten')) <> ('Klart Vatten')
			      And left(rub,len(N'Påminnelse om åtgärd')) <> (N'Påminnelse om åtgärd')
			      AND not(HandelseText is null
			                  AND left(rub,len(N'Kontakt i ärende')) = (N'Kontakt i ärende'))
			      AND not rub like '%Makulerad%' AND dianr <> '--- Makulerad ---'
       ),
   	, inputArende               as (select vwAehAerende.*from EDPVisionRegionGotland.dbo.vwAehAerende vwAehAerende
				  left outer join HandelserArendenInteForHa
				    on vwAehAerende.recAerendeID = HandelserArendenInteForHa.recAerendeID
					where vwAehAerende.strEnhetKod = 'Vatten' and
				     vwAehAerende.strAerendeStatusPresent <> 'Assault' AND
				     vwAehAerende.strAerendemening like 'Klart Vatten%'
          			and HandelserArendenInteForHa.recAerendeID is null)
      ,   arendeMedBeteckning       as (select strDiarienummer
					    , recAerendeID, strFnrID, strSoekbegrepp, strFastighetsbeteckning,
            			(IIF(strFnrID is null AND strSoekbegrepp <> strFastighetsbeteckning,
				    case when strFastighetsbeteckning is null
					     then strSoekbegrepp
					 when strSoekbegrepp is null
					     then strFastighetsbeteckning
					 when strSoekbegrepp like concat('%', strFastighetsbeteckning, '%')
					     then strSoekbegrepp
					     else concat(strSoekbegrepp, ' // ', strFastighetsbeteckning)
				    end, strFastighetsbeteckning)) beteckning
			       from inputArende vwAehAerende
     				    )
    	, filterBySocken as (select arendeMedBeteckning.* from arendeMedBeteckning inner join socknarOfinterest on beteckning like socken)

    arendenNHandlingar as (select * from (SELECT q.strDiarienummer                                                        dianr
		    , q.strFastighetsbeteckning                                                kir
		    , coalesce(q.strSignature, strUserVisasSom)                             as [Handläggarsignatur]
		    , q.strVisasSom                                                         as [Huvudkontakt]
		    , coalesce(q.strSoekbegrepp, q.strFastighetsbeteckning)                 as [Sökbegrepp]
		    , q.strAerendemening                                                    as [ArendeText]
		    , iif(q.strAerendeStatusPresent is null, '', q.strAerendeStatusPresent) as status
		    , coalesce(q.datBeslutsDatum, t.datBeslutsDatum)                           [Beslutsdatum]
		    , nullif(strAerendeKommentar, '')                                       as [Kommentar]
		    , coalesce(t.intLoepnummer, t.intLoepnummerHaendelse, t.intRecnum)      as [Löpnummer]
		    , datHaendelseDatum                                                     as dat
		    , recHaendelseKategoriID                                                as [Händelsekategori]
		    , strRiktning                                                           as rikt
		    , rub
		    , [HandelseText]
	       FROM dbo.vwAehAerende q
		   left outer join utanOnödigaHandlingar t on t.recAerendeID = q.recAerendeID
    ) p
     where status != 'Avslutat' AND status !='Makulerat'
	and ArendeText like '%atten%'
         )
   INSERT INTO #filterArendeWhomHasAnsokan(dianr, kir, Handläggarsignatur, Huvudkontakt, Sökbegrepp, ArendeText, status, Beslutsdatum, Kommentar, Löpnummer, dat, Händelsekategori, rikt, rub, HandelseText, has)
   Select dianr, kir, Handläggarsignatur, Huvudkontakt, Sökbegrepp, ArendeText, status, Beslutsdatum, Kommentar, Löpnummer, dat, Händelsekategori, rikt, rub, HandelseText, '-' from arendenNHandlingar

;

with
    AnsUtg2                         as (select dianr,Löpnummer,rub,rikt,kir from #filterArendeWhomHasAnsokan)

  , harForbud                       as (select dianr, max(Löpnummer) hasForb,max(kir) kir
  					from AnsUtg2
					where rub like N'Beslut om förbud%'
					group by dianr)
  , harAnsökan                      as (select dianr, max(Löpnummer) as hasAns
					from AnsUtg2
					where rub like '%nsökan%' AND rikt = 'inkommande'
					group by dianr )
, harUtf 				as (
					select dianr, max(Löpnummer) as hasUtf
					from AnsUtg2
					where rub like '%tförandeintyg%' AND rikt = 'inkommande'
					group by dianr
				    ),
harHandelseText as (select handelsetext,N'Kontakt i ärende' ka,'Information om' io,rub,dianr,dat from #filterArendeWhomHasAnsokan where HandelseText is not null)

,harForbANsUtf as (select x.dianr,kir, hasForb,coalesce(q.hasAns,t.hasUtf,0) qt,(select top 1 HandelseText from
	 harHandelseText
	where (left(rub, len(ka)) = ka OR left(rub, len(io)) = io)
	and harHandelseText.dianr = x.dianr
	order by dat) as senastKontakt from harForbud x
	    left outer join harAnsökan q on x.dianr = q.dianr
	    left outer join harUtf t on x.dianr = t.dianr)
--select dianr, kir, senastKontakt from harForbANsUtf where hasForb > qt
	, OnlyDiarenummerMedAnsökan       as (
				select q.dianr, kir, Handläggarsignatur, Huvudkontakt, Sökbegrepp, ArendeText, status,
				       Beslutsdatum, Kommentar, Löpnummer, dat, Händelsekategori, rikt, rub, HandelseText, harAnsökan.has
				from harAnsökan	inner join #filterArendeWhomHasAnsokan q on harAnsökan.dianr = q.dianr)

  , senastKontaktMedHandelsetext    as (select dianr,
	(select top 1 HandelseText from harHandelseText where HandelseText is not null AND (left(rub, len(ka)) = ka OR left(rub, len(io)) = io) and harHandelseText.dianr = Touter.dianr order by dat) as senastKontakt
					from OnlyDiarenummerMedAnsökan as Touter)

  , senasteHandelseIfallIntoKontakt as 	(select * from senastKontaktMedHandelsetext where senastKontakt is null)
  , ingenKontaktTextArenden         as 		(select q.dianr, rub, dat from OnlyDiarenummerMedAnsökan q
    						right join senasteHandelseIfallIntoKontakt t
						on q.dianr = harAnsökan.dianr)

  , senasteHendelseOmInteText       as (select dianr,
				  	(select top 1 rub from ingenKontaktTextArenden as Tinner where harHandelseText.dianr = Touter.dianr order by dat) as senastRub
					from OnlyDiarenummerMedAnsökan as Touter)

  , AnsUtg                          as (select dianr,rub fromdiarienummerMedAnsokan where rikt = N'Utgående')
  , harBeslut                       as (select distinct dianr, 'beslut' as hasBes from AnsUtg where rub like '%eslut%' group by dianr)


  , SenastInkommande                as (select dianr, max(rub) rub, max(dat) maxDat, status, has
                          from OnlyDiarenummerMedAnsökan where rikt = 'inkommande'
   			group by dianr, status, has)

  , deMedBeslutsHandelser           as (select distinct harAnsökan.* from OnlyDiarenummerMedAnsökan t
                                        inner join (select harforbud.dianr from harforbud) q on q.dianr = harAnsökan.dianr)

  , utanForbud                      as (select harAnsökan.dianr, kir from OnlyDiarenummerMedAnsökan t
                    left outer join (select harforbud.dianr from harforbud) q
                        on harAnsökan.dianr = q.dianr where q.dianr is null)

--   , gis as (select fnr,beteckning from [GISDATA].[sde_geofir_gotland].gng.FA_FASTIGHET)

--select distinct dianr, kir, gis.fnr from utanForbud left outer join gis on kir = gis.BETECKNING

,treKolumnerOfhandelser   as (select strDiarienummer,strRubrik,strAerendemening from handelserOfInterest)
,tvaKolumnerOfHandelser   as (select strDiarienummer,strRubrik from treKolumnerOfhandelser)
,latest1Handelse 	  as (select tvaKolumnerOfHandelser.strDiarienummer, z.strRubrik ansökan
	from tvaKolumnerOfHandelser cross apply (select top 1 * from AnOmHandelser where strDiarienummer = tvaKolumnerOfHandelser.strDiarienummer order by year(datHaendelseDatum), month(datHaendelseDatum),day(datHaendelseDatum)) z where tvaKolumnerOfHandelser.strDiarienummer = z.strDiarienummer)
select
       IIF(treKolumnerOfhandelser.strAerendemening = 'Klart vatten - information om avlopp' OR latest1Handelse.ansökan like N'%örbättring%', N'förbättring', 'ny') typ, treKolumnerOfhandelser.strDiarienummer,
       replace(strRubrik,N'Beslut om enskild avloppsanläggning','Beslut') 						typAvBeslut,
       replace(replace(strAerendemening,'Klart vatten - information om avlopp','KV'),N'Ansökan/anmälan om enskild avloppsanläggning',N'ansökan') strAerendemening,
       replace(latest1Handelse.ansökan ,N'Ansökan/anmälan om enskild avloppsanläggning',N'ansökan')  			ansökan
from treKolumnerOfhandelser left outer join latest1Handelse
    on latest1Handelse.strDiarienummer = treKolumnerOfhandelser.strDiarienummer
order by typ
select * from #filterArendeWhomHasAnsokan
--where senastKontaktMedHandelsetext.senastKontakt is not null
-- order by dianr

