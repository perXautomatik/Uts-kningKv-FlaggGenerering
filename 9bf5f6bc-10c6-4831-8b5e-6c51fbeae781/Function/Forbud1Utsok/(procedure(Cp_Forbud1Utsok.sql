USE [tempExcel]
GO
DROP PROCEDURE CP_FORBUD1UTSOK
/****** Object:  StoredProcedure [dbo].[Cp_Forbud1Utsok]    Script Date: 2020-04-28 16:19:49 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE DBO.CP_FORBUD1UTSOK(@DIAX TT_ENDASTUNIKAARENDEN READONLY, @DIAKIR HANDELSETABLETYPE READONLY) AS
BEGIN
    DECLARE @HANDELSEKONTAKTER AS KONTAKTUPGTABLETYPE;DECLARE @ARENDEKONTAKTER AS KONTAKTUPGTABLETYPE;
    DECLARE @VISIONADRESSER AS KONTAKTUPGTABLETYPE;DECLARE @FIRPLVISION AS KONTAKTUPGTABLETYPE;
    DECLARE @FILTRARENDELATESTKONTAKT AS HANDELSETABLETYPE;DECLARE @FILTEREDBYMASTER AS HANDELSETABLETYPE;

    DECLARE @IDENT TABLE
    (FASTIGHET NVARCHAR(100), FNR NVARCHAR(100), DATUM NVARCHAR(100), ANDEL
	       NVARCHAR(100), PERSORGNR NVARCHAR(100), NAMN NVARCHAR(100))
    DECLARE @ADRESS TABLE
    (PERSORGNR NVARCHAR(100), 
    CO NVARCHAR(100), 
    UTADR1 NVARCHAR(100), 
    UTADR2 NVARCHAR(100), 
    POSTNR NVARCHAR(100), 
    POSTORT
	       NVARCHAR(100))
    DECLARE @PLFA_LAGFART_V2 TABLE
    (FASTIGHET NVARCHAR(100), 
    FNR INT, 
    DATE DATE, 
    ANDEL FLOAT,
    PERSORGNR NVARCHAR(100),
     NAMN NVARCHAR(100),
     FAL_CO NVARCHAR(100), 
     FAL_UTADR1 NVARCHAR(100),
      FAL_UTADR2 NVARCHAR(100), 
      FAL_POSTNR NVARCHAR(100), 
      FAL_POSTORT NVARCHAR(100),
       SAL_CO NVARCHAR(100), 
       SAL_UTADR1 NVARCHAR(100), 
       SAL_UTADR2 NVARCHAR(100), 
       SAL_POSTNR NVARCHAR(100), 
       SAL_POSTORT NVARCHAR(100), 
       UA_UTADR1 NVARCHAR(100), 
       UA_UTADR2 NVARCHAR(100), 
       UA_UTADR3 NVARCHAR(100), 
       UA_UTADR4 NVARCHAR(100), 
       UA_LAND NVARCHAR(100))

    IF OBJECT_ID('tempdb..#Results') IS NOT NULL
	DROP TABLE #RESULTS

    CREATE TABLE #RESULTS (
	DIANRX NVARCHAR(30)
    )

    INSERT #RESULTS
	EXEC DBO.fn_xScalarDiaToTableDia @DIAX

    INSERT
    INTO @ARENDEKONTAKTER (DIARIENUMMER, FNR, HÄNDELSEDATUM, NAMN, POSTNUMMER, GATUADRESS, POSTORT)
    SELECT X.DIANRX
	 , max(INTDIARIENUMMERLOEPNUMMER)
	 , max(RECENSTAKAKONTAKTID)
	 , STRVISASSOM
	 , STRPOSTNUMMER
	 , STRGATUADRESS
	 , STRPOSTORT
    FROM TEMPEXCEL.DBO.VISIONKONTAKTER V
	JOIN #RESULTS X ON V.STRDIARIENUMMER = X.DIANRX AND V.INTDIARIENUMMERLOEPNUMMER IS NULL
    GROUP BY X.DIANRX, STRVISASSOM, STRPOSTNUMMER, STRGATUADRESS, STRPOSTORT
    INSERT
    INTO @HANDELSEKONTAKTER (DIARIENUMMER, FNR, HÄNDELSEDATUM, NAMN, POSTNUMMER, POSTORT, GATUADRESS)
    SELECT TY.DIANRX
	 , max(INTDIARIENUMMERLOEPNUMMER)
	 , max(RECENSTAKAKONTAKTID)
	 , STRVISASSOM
	 , STRPOSTNUMMER
	 , STRPOSTORT
	 , STRGATUADRESS
    FROM #RESULTS TY
	LEFT OUTER JOIN TEMPEXCEL.DBO.VISIONKONTAKTER V ON TY.DIANRX =  V.STRDIARIENUMMER
    WHERE V.INTDIARIENUMMERLOEPNUMMER IS NOT NULL
    GROUP BY TY.DIANRX, STRVISASSOM, STRPOSTNUMMER, STRPOSTORT, STRGATUADRESS

    INSERT
    INTO @FILTRARENDELATESTKONTAKT (DIARIENUMMER, FASTIGHET, ÄRENDEMENING, TEXT, RUBRIK, RIKTNING, DATUM, ARENDEKOMMENTAR)
    SELECT Z.DIARIENUMMER , Z.FASTIGHET , Z.ÄRENDEMENING , Z.TEXT  , Z.RUBRIK , Z.RIKTNING , Z.DATUM , Z.ARENDEKOMMENTAR
    FROM [tempExcel].[dbo].sp_xCheckThatItsNotBadHadelseNa(@DIAKIR) Z
	INNER JOIN usp_xFilterByHasArende(@DIAKIR) Q ON Q.ID = Z.ID
	INNER JOIN DBO.sp_xFilterSenasteMedKon(@DIAKIR) Y ON Z.ID = Y.ID

    INSERT
    INTO @FILTEREDBYMASTER (DIARIENUMMER, FASTIGHET, ÄRENDEMENING, TEXT, RUBRIK, RIKTNING, DATUM, ARENDEKOMMENTAR)
    SELECT DISTINCT V.DIANRX
		  , V.FASTIGHET
		  , Y.ARENDEKOMMENTAR
		  , Y.TEXT
		  , isnull(V.RUBRIK, '')
		  , Y.RIKTNING
		  , isnull(V.DATUM, 2020 - 10 - 10)
		  , Y.ARENDEKOMMENTAR
    FROM @FILTRARENDELATESTKONTAKT Y
	RIGHT OUTER JOIN(SELECT #RESULTS.DIANRX  , Q.DATUM , Q.RUBRIK  , Q.FASTIGHET
			 FROM #RESULTS
			     LEFT OUTER JOIN @DIAKIR Q ON
			     #RESULTS.DIANRX = Q.DIARIENUMMER) V 
			     ON V.DIANRX = Y.DIARIENUMMER

    INSERT
    INTO @VISIONADRESSER (DIARIENUMMER, FNR, FASTIGHET, HÄNDELSEDATUM, NAMN, POSTNUMMER, POSTORT, GATUADRESS)
    SELECT KIR.DIARIENUMMER
	 , KIR.FNR
	 , VISION.FASTIGHET
	 , 2020 - 10 - 10 DATUM
	 , NAMN
	 , DBO.udf_xGetNumeric(POSTNUMMER)
	 , POSTORT
	 , GATUADRESS
    FROM (SELECT * FROM DBO.sp_xKirToFnr(@FILTEREDBYMASTER)) KIR
	LEFT OUTER JOIN
	(SELECT * FROM @HANDELSEKONTAKTER UNION SELECT * FROM @ARENDEKONTAKTER) VISION
	ON VISION.DIARIENUMMER = KIR.DIARIENUMMER

    --vision handelser does include personnr, it does also include a country and company feild, and it would be silly not to use it before this step.
    -- does this step find missing personnr?
    INSERT
    INTO @FIRPLVISION (DIARIENUMMER, FNR, FASTIGHET, HÄNDELSEDATUM, NAMN, POSTNUMMER, GATUADRESS, POSTORT, PERSONNR)
    SELECT DIARIENUMMER , FNR , FASTIGHET  , HÄNDELSEDATUM , NAMN  , POSTNUMMER , GATUADRESS , POSTORT , PERSONNR
    FROM DBO.sp_xKonUpgToAdr(@VISIONADRESSER)

    -- why do we do this process manually, don't we do this similary above?
    -- maybe worth doing a moduel , that takes any source, returning digestable ressults
    INSERT
    INTO @PLFA_LAGFART_V2 (FASTIGHET, FNR, DATE, ANDEL, PERSORGNR, NAMN, FAL_CO, FAL_UTADR1, FAL_UTADR2, FAL_POSTNR, FAL_POSTORT, SAL_CO, SAL_UTADR1, SAL_UTADR2, SAL_POSTNR, SAL_POSTORT, UA_UTADR1, UA_UTADR2, UA_UTADR3, UA_UTADR4, UA_LAND)
    SELECT DISTINCT RESS.FASTIGHET
		  , RESS.FNR
		  , INSKDATUM                                                          'date'
		  , cast(left(ANDEL, charindex('/', ANDEL, 1) - 1) AS FLOAT) /
		    cast(right(ANDEL, len(ANDEL) - charindex('/', ANDEL, 1)) AS FLOAT) ANDEL
		  , PERSORGNR
		  , FIR.NAMN
		  , FAL_CO
		  , FAL_UTADR1
		  , FAL_UTADR2
		  , FAL_POSTNR
		  , FAL_POSTORT
		  , SAL_CO
		  , SAL_UTADR1
		  , SAL_UTADR2
		  , SAL_POSTNR
		  , SAL_POSTORT
		  , UA_UTADR1
		  , UA_UTADR2
		  , UA_UTADR3
		  , UA_UTADR4
		  , UA_LAND
    FROM (SELECT *
	  FROM (SELECT DIARIENUMMER, FNR, FASTIGHET, CC_PRIO, avg(CC_PRIO) OVER (PARTITION BY FNR) / 500 KOMPLETT
		FROM @FIRPLVISION) A
	  WHERE KOMPLETT < 1) RESS
	JOIN GISDATA.SDE_GEOFIR_GOTLAND.GNG.FA_LAGFART_V2 FIR ON RESS.FNR = FIR.FNR
    INSERT INTO @IDENT SELECT FASTIGHET , FNR , DATE , ANDEL  , PERSORGNR  , NAMN
    FROM @PLFA_LAGFART_V2
    INSERT
    INTO @ADRESS
    SELECT PERSORGNR, FAL_CO, FAL_UTADR1, FAL_UTADR2, FAL_POSTNR, FAL_POSTORT
    FROM @PLFA_LAGFART_V2
    UNION
    SELECT PERSORGNR, SAL_CO, SAL_UTADR1, SAL_UTADR2, SAL_POSTNR, SAL_POSTORT
    FROM @PLFA_LAGFART_V2
    UNION
    SELECT PERSORGNR, UA_UTADR1, UA_UTADR2, UA_UTADR3, UA_UTADR4, UA_LAND
    FROM @PLFA_LAGFART_V2

    SELECT I.*, A.CO, A.UTADR1, A.UTADR2, A.POSTNR, A.POSTORT
    FROM (SELECT *
	  FROM @ADRESS
	  WHERE NOT (CO IS NULL AND UTADR1 IS NULL AND UTADR2 IS NULL AND POSTNR IS NULL AND POSTORT IS NULL)
	  GROUP BY PERSORGNR, CO, UTADR1, UTADR2, POSTNR, POSTORT) A
	JOIN @IDENT I ON I.PERSORGNR = A.PERSORGNR

END;

